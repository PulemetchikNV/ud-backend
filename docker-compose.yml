version: '3.8'

services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${ENV_PGDATA}
    ports:
      - '5432:5432'
    env_file:
      - ".env"
    networks:
      - postgres
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin4_container_ud
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  api:
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 3000:3000
    networks:
      - postgres
volumes:
  docker-nest-postgres:
  db:
  pgadmin:
networks:
  postgres:
    driver: bridge